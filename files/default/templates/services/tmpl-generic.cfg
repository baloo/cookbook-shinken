# This file is dropped off by chef
# Any local changes will be overwritten

define service{
# ((( Template ID
  # This host is a template
  # Don't register it
  register                        0

  # Name of the template
  name                            tmpl-generic

  alias                           tmpl-generic
# )))

## ((( Check settings
  # The number of times that Nagios will retry the host check command
  max_check_attempts              2

  # The short name of the time period during which active checks of this
  # service can be made
  # @see timeperiods
  check_period                    24x7

  # The number of "time units" between regularly scheduled checks of the host
  # @see interval_length
  check_interval                  5

  # Active checks of this host are enabled
  active_checks_enabled           1

  # Define the number of "time units" to wait before scheduling a re-check of
  # the hosts
  retry_interval                  5

  # Determine whether or not passive checks are enabled for this host
  passive_checks_enabled          1

  # Determine whether or not services checks may be run parallized
  # May impact performances if disabled
  parallelize_check               1

  # Determines whether or not checks for the service will be "obsessed" over
  # using the ocsp_command
  obsess_over_service             1

  # Determine whether or not freshness checks are enabled for this service
  check_freshness                 1

  # specify the freshness threshold (in seconds) for this service
  freshness_threshold             3600
## )))

# ((( Contact settings
  # Names of the contact groups that should be notified whenever there are
  # problems (or recoveries) with this host. Multiple contact groups should be
  # separated by commas
  # @see contact_groups
  contact_groups                  zenexity-sysadmins
# )))

# ((( Flap detection settings
  # Determine whether or not flap detection is enabled for this service
  flap_detection_enabled          1
# )))

# ((( Perfdata settings
  # determine whether or not the processing of performance data is enabled for
  # this service
  process_perf_data               1
# )))

# ((( Event handler settings
  # Determine whether or not the event handler for this service is enabled
  event_handler_enabled           0

  # Specify the short name of the command that should be run whenever a change
  # in the state of the service is detected
  event_handler                   super_event_kill_everyone!DIE
# )))

# ((( Retain settings
  # whether or not status-related information about the host is retained across
  # program restarts
  retain_status_information       1

  # whether or not non-status information about the host is retained across
  # program restarts
  retain_nonstatus_information    1
#)))

# ((( Notification settings
  # Define the number of "time units" to wait before re-notifying a contact that
  # this service is still down or unreachable
  # @see interval_length
  notification_interval           30

  # Time period during which notifications of events for this host can be sent
  # out to contacts
  # @see timeperiods
  notification_period             24x7

  # Determine when notifications for the service should be sent out
  # d = send notifications on a DOWN state
  # u = send notifications on an UNREACHABLE state
  # r = send notifications on recoveries (OK state)
  # f = send notifications when the host starts and stops flapping
  # s = send notifications when scheduled downtime starts and ends
  notification_options            w,u,c,r

  # Determine whether or not notifications for this host are enabled
  notifications_enabled           1
# )))

# ((( Misc settings
  # Determine whether or not the failure prediction for this service is enabled
  failure_prediction_enabled      1

  # Denote whether the service is "volatile"
  is_volatile                     0

# )))
}

# vim: ts=2 sw=2 expandtab foldmethod=marker foldmarker=(((,))):
